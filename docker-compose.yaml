version: '3.8'

services:
  redis:
    image: 'redis:alpine'
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis-data:/data

  matching-service:
    build:
      context: ./matching-service
    restart: always
    env_file:
      - ./matching-service/.env.docker
    ports:
      - ${MATCH_PORT}:${MATCH_PORT}
    depends_on:
      - redis
    networks:
      - default

  interview-service:
    build:
      context: ./interview-service
    restart: always
    env_file:
      - ./interview-service/.env.docker
    ports:
      - ${SOCKET_PORT}:${SOCKET_PORT}
    networks:
      - default

  question-service:
    build:
      context: ./backend/questions
    restart: always
    env_file:
      - ./backend/questions/.env
    ports:
      - ${QUESTION_PORT}:${QUESTION_PORT}
    networks:
      - default

  user-service:
    build:
      context: ./backend/users
    restart: always
    env_file:
      - ./backend/users/.env
    ports:
      - ${USER_PORT}:${USER_PORT}
    networks:
      - default

  frontend:
    build:
      context: ./frontend
    restart: always
    env_file:
      - ./frontend/.env
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    networks:
      - default
    depends_on:
      - user-service
      - question-service
      - matching-service

volumes:
  redis-data:

networks:
  default:
    name: peerprep
    driver: bridge
